{"version":3,"sources":["../src/mustache.js"],"names":["define","$","ajax","log","notification","templates","config","str","findDocsSection","templateSource","templateName","marker","i","sections","match","length","section","start","indexOf","offset","substr","templateLoaded","root","source","originalSource","get_string","done","s","text","fail","exception","docs","find","debug","example","trim","context","rawJSON","parseJSON","e","render","html","js","replaceNodeContents","loadTemplate","parts","split","component","shift","name","join","promises","call","methodname","args","template","themename","theme","includecomments","when","apply","init","each","templatename","attr"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This is called from to render mustache templates\n *\n * @module     tool_componentlibrary/mustache\n * @package    tool_componentlibrary\n * @copyright  2020 Bas Brands <bas@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/log', 'core/notification', 'core/templates', 'core/config', 'core/str'],\n       function($, ajax, log, notification, templates, config, str) {\n\n    /**\n     * Search through a template for a template docs comment.\n     *\n     * @param {String} templateSource The raw template\n     * @param {String} templateName The name of the template used to search for docs tag\n     * @return {String|boolean} the correct comment or false\n     */\n    var findDocsSection = function(templateSource, templateName) {\n\n        if (!templateSource) {\n            return false;\n        }\n        // Find the comment section marked with @template component/template.\n        var marker = \"@template \" + templateName,\n            i = 0,\n            sections = [];\n\n        sections = templateSource.match(/{{!([\\s\\S]*?)}}/g);\n\n        // If no sections match - show the entire file.\n        if (sections !== null) {\n            for (i = 0; i < sections.length; i++) {\n                var section = sections[i];\n                var start = section.indexOf(marker);\n                if (start !== -1) {\n                    // Remove {{! and }} from start and end.\n                    var offset = start + marker.length + 1;\n                    section = section.substr(offset, section.length - 2 - offset);\n                    return section;\n                }\n            }\n        }\n        // No matching comment.\n        return false;\n    };\n\n    /**\n     * Handle a template loaded response.\n     *\n     * @param {String} templateName The template name\n     * @param {String} source The template source\n     * @param {String} originalSource The original template source (not theme overridden)\n     */\n    var templateLoaded = function(root, templateName, source, originalSource) {\n        str.get_string('templateselected', 'tool_templatelibrary', templateName).done(function(s) {\n            $('[data-region=\"displaytemplateheader\"]').text(s);\n        }).fail(notification.exception);\n\n        // Find the comment section marked with @template component/template.\n        var docs = findDocsSection(source, templateName);\n\n        root.find('[data-region=\"source\"]').text(source);\n\n        if (docs === false) {\n            // Docs was not in theme template, try original.\n            docs = findDocsSection(originalSource, templateName);\n        }\n\n        if (docs === false) {\n            log.debug('Template is missing docs section.');\n            return;\n        }\n\n        var example = docs.match(/Example context \\(json\\):([\\s\\S]*);?/);\n\n        root.find('[data-region=\"config\"]').text(example[1].trim());\n\n        var context = false;\n        if (example) {\n            var rawJSON = example[1].trim();\n            try {\n                context = $.parseJSON(rawJSON);\n            } catch (e) {\n                log.debug('Could not parse json example context for template.');\n                log.debug(rawJSON);\n                log.debug(e);\n            }\n        }\n        if (context) {\n            templates.render(templateName, context).done(function(html, js) {\n                templates.replaceNodeContents(root.find('[data-region=\"rendered\"]'), html, js);\n            }).fail(notification.exception);\n        } else {\n            str.get_string('templatehasnoexample', 'tool_templatelibrary').done(function(s) {\n                root.find('[data-region=\"rendered\"]').text(s);\n            }).fail(notification.exception);\n        }\n    };\n\n    /**\n     * Load the a template source from Moodle.\n     *\n     * @param {String} templateName\n     */\n    var loadTemplate = function(root, templateName) {\n        var parts = templateName.split('/');\n        var component = parts.shift();\n        var name = parts.join('/');\n\n        var promises = ajax.call([{\n            methodname: 'core_output_load_template',\n            args: {\n                    component: component,\n                    template: name,\n                    themename: config.theme,\n                    includecomments: true\n            }\n        }, {\n            methodname: 'tool_templatelibrary_load_canonical_template',\n            args: {\n                    component: component,\n                    template: name\n            }\n        }], true, false);\n\n        // When returns a new promise that is resolved when all the passed in promises are resolved.\n        // The arguments to the done become the values of each resolved promise.\n        $.when.apply($, promises)\n            .done(function(source, originalSource) {\n              templateLoaded(root, templateName, source, originalSource);\n            })\n            .fail(notification.exception);\n    };\n\n    var init = function() {\n        var root = $('[data-region=\"componentlibrary\"]');\n        root.find('[data-region=\"mustachecode\"]').each(function() {\n            var templatename = $(this).attr(\"data-template\");\n            loadTemplate($(this), templatename);\n        });\n    };\n\n    // This module does not expose anything.\n    return {\n        init: init\n    };\n});\n"],"file":"mustache.min.js"}